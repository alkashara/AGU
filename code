Задача 1
Посчитайте количество символов, исключая пробелы:
string_01 = "History is always written by the winners. hen two cultures clash, the loser is obliterated, and the winner writes the history books-books which glorify their own cause and disparage the conquered foe. As Napoleon once said, 'What is history, but a fable agreed upon?'"
count_symbols = len(string_01.replace(" ", ""))
print(count_symbols)

Посчитайте количество слов:  
words = string_01.split()
print(len(words))

Функция, выводящая слова на определенную букву: 
def my_func(letter, words):
    for word in words:
        if word.lower().startswith(letter.lower()):
            print(word)

my_func('w', words)

Задача 2
Генерация случайной последовательности с числом 3: 
import random

def generate_sequence():
    digits = [random.randint(0, 9) for _ in range(5)]
    position = random.randint(0, 5)
    digits.insert(position, 3)
    return ''.join(map(str, digits))

print(generate_sequence())

Задача 3
Сумма элементов списка по заданным условиям: 
list_01 = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 14, 46, 273, 22, 99, 15, 1000]
sum_elements = sum(x for x in list_01 if (10 < x < 100) or (200 < x < 500))
print(sum_elements)

Задача 4
Преобразование данных студентов в словарь: 
students = [
    ["0001", "Антонов", "Антон", "Игоревич", "20.08.2009", "БСТ161"],
    ["1102", "Богов", "Артем", "Игоревич", "25.01.2010", "БСТ162"],
    ["0333", "Глаголева", "Анастасия", "Николаевна", "11.07.2009", "БСТ163"],
    ["4004", "Степанова", "Наталья", "Александровна", "13.02.2008", "БСТ161"],
    ["0045", "Боков", "Игорь", "Харитонович", "02.06.2009", "БСТ161"],
    ["0096", "Васильков", "Валентин", "Сергеевич", "20.03.2009", "БСТ164"],
    ["0607", "Сиропова", "Виолетта", "Эдуардовна", "28.05.2010", "БСТ162"]
]

students_dict = {student[0]: student[1:] for student in students}
print(students_dict)

Функция для изменения группы студента: 
def change_group(student_id, new_group, students_dict):
    if student_id in students_dict:
        students_dict[student_id][-1] = new_group

change_group("0001", "БСТ999", students_dict)
print(students_dict["0001"])

Функция для вывода студентов по номеру группы: 
def get_students_by_group(group, students_dict):
    for student in students_dict.values():
        if student[-1] == group:
            print(f'{student[0]} {student[1]} {student[2]}')

get_students_by_group("БСТ161", students_dict)

Задача 5
Сложение всех элементов матрицы: 
matrix = [
    [0,1,2,4,8],
    [6,2,2,1,9],
    [3,3,3,3,3],
    [4,6,7,1,2],
    [5,7,3,4,0]
]

sum_matrix = sum(sum(row) for row in matrix)
print(sum_matrix)

Вычисление максимальной суммы по столбцам: 
max_sum_column = max(sum(row[i] for row in matrix) for i in range(len(matrix[0])))
print(max_sum_column)
